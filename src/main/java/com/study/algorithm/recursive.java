package com.study.algorithm;

/**
 * @Description: 递归算法理解
 * @Author: MCP
 * @Date: 2021/4/25 11:12
 **/
public class recursive {

    /**
     * 递归：分为两个过程，递和归
     * 重点：1、明确递归终止条件；
     *       2、给出递归终止时的处理办法；
     *       3、提取重复的逻辑，缩小问题规模。
     * 通俗的讲：自己调用自己，并且缩小范围，等到调不通的时候，返回结果。
     *
     *递归与循环的区别：
     *          循环不断的进行循环，直到条件不满足的时候直接结束。
     *          递归不断的进行调用，等到终止的时候，返回结果。
     *  举例：
     *      循环：甲玩魂斗罗：过第一关，发现还有第二关，过了第二关发现还有第三关.......过到第999关的时候，
     *            所有的命都用完了，直接挂掉了，直接结束循环。
     *      递归：乙玩魂斗罗：过第一关，发现还有第二关，过了第二关发现还有第三关.......过到第999关的时候，所有的命都用完了，
     *            挂掉了，这时候,乙会原路返回并计数，回到最开始的直升机上，告诉你，我过了999关。
     *     这就是他们的区别。
     *
     *递归一定要明确终止条件，不然容易造成死循环！！！
     *
     *
     **/

    /*********************话不多，直接上例子；看完直接懂*************/
            //阶乘的计算：小周建平肯定不知道阶乘是什么，
    /***
     *  就是搞一个函数f(n):
     *          当n=3的时候。返回结果 3*2*1=6
     *          当n=4的时候，返回结果 4*3*2*1=24
     *          当n=999的时候，返回结果 999*998*997*.......*3*2*1= 你自己算吧
     **/

    public static void main(String[] args) {
        long f = f(3);
        System.out.println(f);
    }

    public static long f(int n){
        if(n == 1)   // 明确递归终止条件:等于1的时候终止
            return 1;    // 简单情景
        return n*f(n-1);  // 相同重复逻辑，缩小问题的规模：每次都-1 缩小范围
    }

    // 小周建平肯定研究不明白了，我输入一个3，为什么最后返回不是1 ，真是怪了,小脑袋瓜不够用了。
    // 问题不大，下面我我模拟一个程序的执行的过程

//
//     * 输入n=3的时候，程序f(n)就是f(3)：
//     *               //       1.判断：if(3 == 1) --->false                            \
//     *                      2.f(n)=3*f(n-1)   这时候n-1=2，所以，f(n)=3*f(2)           \
//     *                      3.f(n)=3*f(2)                                               \
//     *                      4.判断：if(2 == 1) --->false                                 \      递
//     *                      5.f(n)=3*2*f(n-1)   这时候n-1=1，所以，f(n)=3*2*f(1)          \
//     *                      6.f(n)=3*2*f(1)                                                \
//     *                      7.判断：if(1== 1) --->true                                      \
//     *                      8.触发终止条件，终止递归,返回结果                                \
//     *                      9. f(n)=3*2*1 按照程序执行的顺序：3*(2*1)                        /
//     *                      10. f(n)=3*(2*1)                                                /
//     *                      11. f(n)=3*(2)                                                 /      归
//     *                      12. f(n)=3*(2)                                                /
//     *                      13. f(n)=6                                                   /
//     *                      14. return 6 最终结果就是6                                  /
//
//
//
//              这就是递归：这只是最简单的原理，其他就按照这种思想深入理解就可以了

}
